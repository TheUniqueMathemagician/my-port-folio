// TODO: fix strange issue on hover ( a shadow is appearing )

@import "../../styles/theme.scss";

.root {
  overflow: hidden;
  position: relative;
  align-items: center;
  background: none;
  border: 0;
  border-radius: 0;
  color: var(--cvos-text);
  column-gap: $padding;
  display: grid;
  grid-template-columns: 1fr;
  height: 100%;
  justify-items: center;
  outline: 0;
  padding: $padding/2;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.3s ease, color 0.3s ease;
  letter-spacing: 0.5px;
  &[readonly] {
    color: var(--cvos-text);
    cursor: default;
    pointer-events: none;
    user-select: none;
  }
  &:disabled {
    color: var(--cvos-disabled);
    cursor: default;
  }
  &.full-width {
    width: 100%;
  }

  &.xs {
    padding: 0;
  }
  &.sm {
    padding: $padding/3 $padding * 3/4;
  }
  &.md {
    padding: $padding/2 $padding;
  }
  &.lg {
    font-size: 1.2rem;
    padding: $padding $padding * 2;
  }
  &.xl {
    font-size: 1.5rem;
    padding: $padding * 1.5 $padding * 3;
  }

  @each $color in $colors {
    &.#{$color} {
      color: var(--cvos-#{$color});
    }
  }

  &.outlined {
    border: 1px solid var(--cvos-divider);
  }
  &.blur {
    background-color: var(--cvos-background);
    &:not(.contrast) {
      @supports (backdrop-filter: $blur) {
        background-color: var(--cvos-background-33);
        backdrop-filter: $blur;
        @each $color in $colors {
          &.#{$color} {
            background-color: var(--cvos-#{$color}#{-33});
          }
        }
      }
    }
  }
  &.filled {
    background-color: var(--cvos-background);
    color: var(--cvos-text);
    @each $color in $colors {
      &.#{$color} {
        background-color: var(--cvos-#{$color});
      }
    }
  }
  &.contrast {
    border: 1px solid var(--cvos-divider);
  }

  &.has-start-img {
    grid-template-columns: auto 1fr;
  }
  &.has-end-img {
    grid-template-columns: 1fr auto;
  }
  &.has-start-img.has-end-img {
    grid-template-columns: auto 1fr auto;
  }

  &:not(:disabled):not([readonly])::after {
    pointer-events: none;
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0;
    transition: opacity 0.3s ease;
    background-color: var(--cvos-hint-50);
  }
  &:hover::after {
    opacity: 1;
  }
  &:hover:focus::after {
    transition: opacity 0 0;
  }

  &::before {
    pointer-events: none;
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80%;
    padding-top: 80%;
    border-radius: 50%;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    background-color: var(--cvos-hint-50);
    opacity: 0;
    transform: translateX(-50%) translateY(-50%) scale(0);
  }
  &:focus::before {
    opacity: 1;
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
  &:active:focus::before {
    opacity: 1;
    transform: translateX(-50%) translateY(-50%) scale(1.5);
  }

  & img {
    width: 1.5rem;
    height: 1.5rem;
  }

  &.align {
    &--start {
      justify-items: flex-start;
    }
    &--center {
      justify-items: center;
    }
    &--end {
      justify-items: flex-end;
    }
  }

  > .ripple {
    position: absolute;
    background: var(--cvos-text-50);
    width: 250%;
    padding-top: 250%;
    pointer-events: none;
    border-radius: 50%;
    animation: ripple 0.666s ease-out;
  }
  > :not(.ripple) {
    z-index: 1;
  }
}

.is-icon {
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr;
  border-radius: 50%;
  height: auto;
  &::after,
  &::before {
    border-radius: 50%;
  }
  &.xs {
    padding: $padding/3;
  }
  &.sm {
    padding: $padding/2;
  }
  &.md {
    padding: $padding * 0.75;
  }
  &.lg {
    font-size: 1.2rem;
    padding: $padding;
  }
  &.xl {
    font-size: 1.5rem;
    padding: $padding * 1.5;
  }
}

@keyframes ripple {
  from {
    opacity: 0.666;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.666;
    transform: translate(-50%, -50%) scale(0.666);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}
