@import "../../../styles/theme.scss";

.root {
  display: inline-block;
  position: relative;
  background: none;
  border: 0;
  border-radius: 0;
  outline: 0;
  padding: $padding/2;
  cursor: pointer;
  text-decoration: none;
  transition: background-color 0.3s ease, color 0.3s ease;
  overflow: hidden;
  &[readonly] {
    color: var(--text-color);
    cursor: default;
    pointer-events: none;
    user-select: none;
  }
  &:disabled {
    color: var(--cvos-disabled);
    cursor: default;
  }
  &.full-width {
    width: 100%;
  }

  &.xs {
    padding: $padding * 0.33;
  }
  &.sm {
    padding: $padding * 0.5 $padding * 0.75;
  }
  &.md {
    padding: $padding * 0.5 $padding;
  }
  &.lg {
    font-size: 1.2rem;
    padding: $padding * 0.66 $padding * 1.2;
  }
  &.xl {
    font-size: 1.5rem;
    padding: $padding * 1.2 $padding * 1.5;
  }

  @each $color in $colors {
    &.#{$color} .content {
      color: var(--cvos-#{$color});
    }
  }
  &.filled .content {
    color: var(--cvos-tet);
  }

  &:not(:disabled)::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0;
    transition: opacity 0.3s ease;
    background-color: var(--text-color);
  }
  &:hover::after {
    opacity: 0.2;
  }

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80%;
    padding-top: 80%;
    border-radius: 50%;
    transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
    background-color: var(--text-color);
    opacity: 0;
    transform: translateX(-50%) translateY(-50%) scale(0);
  }
  &:focus::before {
    opacity: 0.2;
    transform: translateX(-50%) translateY(-50%) scale(1);
  }
  &:active:focus::before {
    transform: translateX(-50%) translateY(-50%) scale(1.5);
  }

  &.loading {
    > .content {
      visibility: hidden;
    }
  }
  &:not(.loading) {
    > .loader {
      display: none;
    }
  }

  & img {
    width: 1.5rem;
    height: 1.5rem;
  }
}

.ripple {
  position: absolute;
  background: var(--text-color);
  opacity: 0;
  width: 250%;
  padding-top: 250%;
  border-radius: 50%;
  animation: ripple 0.666s ease-out;
  z-index: 0;
}

.content {
  display: grid;
  grid-template-columns: 1fr;
  justify-items: center;
  letter-spacing: 0.5px;
  font-size: 1rem;
  column-gap: $padding;
  color: var(--text-color);
  overflow: hidden;
  align-items: center;
  z-index: 1;
}

.align {
  &--start {
    .content {
      justify-items: flex-start;
    }
  }
  &--center {
    .content {
      justify-items: center;
    }
  }
  &--end {
    .content {
      justify-items: flex-end;
    }
  }
}

.has-start-img {
  .content {
    grid-template-columns: auto 1fr;
  }
}
.has-end-img {
  .content {
    grid-template-columns: 1fr auto;
  }
}
.has-start-img.has-end-img {
  .content {
    grid-template-columns: auto 1fr auto;
  }
}

.outlined {
  border: 1px solid var(--cvos-divider);
  @each $color in $colors {
    &.#{$color} {
      border-color: var(--cvos-#{$color});
    }
  }
}

.blur {
  background-color: var(--cvos-paper-33);
  &:not(.contrast) {
    @supports (backdrop-filter: $blur) {
      backdrop-filter: $blur;
      @each $color in $colors {
        &.#{$color} {
          background-color: var(--cvos-#{$color}#{-33});
        }
      }
    }
  }
}

.filled {
  background-color: var(--cvos-paper-33);
  color: var(--text-color);
  @each $color in $colors {
    &.#{$color} {
      background-color: var(--cvos-#{$color});
    }
  }
}

.contrast {
  border: 1px solid var(--cvos-divider);
}

.is-icon {
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr;
  border-radius: 50%;
  height: auto;
  &::after,
  &::before {
    border-radius: 50%;
  }
  &.xs {
    padding: $padding/3;
  }
  &.sm {
    padding: $padding/2;
  }
  &.md {
    padding: $padding * 0.75;
  }
  &.lg {
    font-size: 1.2rem;
    padding: $padding;
  }
  &.xl {
    font-size: 1.5rem;
    padding: $padding * 1.5;
  }
}

@keyframes ripple {
  from {
    opacity: 0.333;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.5;
    transform: translate(-50%, -50%) scale(0.666);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

button.root {
  user-select: none;
}

.loader {
  margin: auto;
  height: 1.3em;
  width: 1.3em;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 1;
  svg {
    animation: svg-animation 2s linear infinite;
    display: block;
    circle {
      animation: circle-animation 1.4s ease-in-out infinite both;
      display: block;
      fill: transparent;
      stroke: var(--text-color);
      stroke-linecap: round;
      stroke-dasharray: 283;
      stroke-dashoffset: 280;
      stroke-width: 10px;
      transform-origin: 50% 50%;
    }
  }
}

.root {
  @each $color in $colors {
    &.#{$color}:not(.filled) .loader circle {
      stroke: var(--cvos-#{$color});
    }
  }
}

@keyframes svg-animation {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(360deg);
  }
}

@keyframes circle-animation {
  0%,
  25% {
    stroke-dashoffset: 280;
    transform: rotate(0);
  }

  50%,
  75% {
    stroke-dashoffset: 75;
    transform: rotate(45deg);
  }

  100% {
    stroke-dashoffset: 280;
    transform: rotate(360deg);
  }
}
